{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../services/auth.service\";\nimport * as i4 from \"ngx-toastr\";\nexport class RegisterComponent {\n  constructor(fb, router, authService, toastr) {\n    this.fb = fb;\n    this.router = router;\n    this.authService = authService;\n    this.toastr = toastr;\n    this.formularioRegister = this.fb.group({\n      usname: ['', [Validators.required, Validators.minLength(6)]],\n      id: ['', [Validators.required, Validators.minLength(8)]],\n      pass: ['', [Validators.required, Validators.minLength(7)]]\n    });\n  }\n  register() {\n    const {\n      usname,\n      id,\n      pass\n    } = this.formularioRegister.value;\n    this.authService.register(usname, id, pass).subscribe(res => {\n      if (res === true) {\n        this.router.navigateByUrl('/dashboard');\n        this.toastr.success(id + \" \" + usname + 'Registro correcto');\n      } else {\n        this.toastr.error(res, 'Error', {\n          timeOut: 4000,\n          progressAnimation: 'increasing'\n        });\n      }\n    });\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.ToastrService));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 14,\n  vars: 1,\n  consts: [[\"id\", \"bg\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-field\"], [\"placeholder\", \"Username\", \"formControlName\", \"usname\", \"required\", \"\"], [\"placeholder\", \"id\", \"formControlName\", \"id\", \"required\", \"\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"formControlName\", \"pass\", \"required\", \"\"], [\"type\", \"submit\", 1, \"btn\"], [\"routerLink\", \"/auth/register\", 1, \"btn-sec\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.register();\n      });\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵelement(3, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 2);\n      i0.ɵɵelement(5, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 2);\n      i0.ɵɵelement(7, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"button\", 6);\n      i0.ɵɵtext(10, \"Register\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 2)(12, \"button\", 7);\n      i0.ɵɵtext(13, \"Log In\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.formularioRegister);\n    }\n  },\n  dependencies: [i2.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;AAUnE,OAAM,MAAOC,iBAAiB;EAQ5BC,YAAoBC,EAAe,EACzBC,MAAc,EACdC,WAAyB,EACzBC,MAAsB;IAHZ,OAAE,GAAFH,EAAE;IACZ,WAAM,GAANC,MAAM;IACN,gBAAW,GAAXC,WAAW;IACX,WAAM,GAANC,MAAM;IAThB,uBAAkB,GAAc,IAAI,CAACH,EAAE,CAACI,KAAK,CAAE;MAC7CC,MAAM,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACU,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5DC,EAAE,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACU,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MACxDE,IAAI,EAAE,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACU,SAAS,CAAC,CAAC,CAAC,CAAC;KAC1D,CAAC;EAME;EAEFG,QAAQ;IACN,MAAM;MAACL,MAAM;MAAEG,EAAE;MAAEC;IAAI,CAAC,GAAE,IAAI,CAACE,kBAAkB,CAACC,KAAK;IACvD,IAAI,CAACV,WAAW,CAACQ,QAAQ,CAACL,MAAM,EAACG,EAAE,EAACC,IAAI,CAAC,CACxCI,SAAS,CAACC,GAAG,IAAG;MACf,IAAGA,GAAG,KAAK,IAAI,EAAC;QACd,IAAI,CAACb,MAAM,CAACc,aAAa,CAAC,YAAY,CAAC;QACvC,IAAI,CAACZ,MAAM,CAACa,OAAO,CAACR,EAAE,GAAE,GAAG,GAAGH,MAAM,GAAG,mBAAmB,CAAC;OAC5D,MAAM;QACL,IAAI,CAACF,MAAM,CAACc,KAAK,CAACH,GAAG,EAAC,OAAO,EAAC;UAC5BI,OAAO,EAAE,IAAI;UACbC,iBAAiB,EAAE;SACpB,CAAC;;IAEN,CAAC,CAAC;EAEJ;;AA7BSrB,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX9BC,yBAAmB;MAEnBA,+BAA+D;MAAxBA;QAAA,OAAYC,cAAU;MAAA,EAAC;MAC1DD,8BAAwB;MACpBA,2BAAkE;MACtEA,iBAAM;MACNA,8BAAwB;MACpBA,2BAAwD;MAC5DA,iBAAM;MAENA,8BAAwB;MACpBA,2BACe;MACnBA,iBAAM;MAENA,8BAAwB;MACeA,yBAAQ;MAAAA,iBAAS;MAGxDA,+BAAwB;MACgCA,uBAAM;MAAAA,iBAAS;;;MAlBrEA,eAAgC;MAAhCA,kDAAgC","names":["Validators","RegisterComponent","constructor","fb","router","authService","toastr","group","usname","required","minLength","id","pass","register","formularioRegister","value","subscribe","res","navigateByUrl","success","error","timeOut","progressAnimation","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\edwin\\OneDrive\\Documentos\\GitHub\\LogApp-Gen-2-2023-CDIS-UANL\\LogApp-Gen-2-2023-CDIS-UANL\\src\\app\\auth\\components\\register\\register.component.ts","C:\\Users\\edwin\\OneDrive\\Documentos\\GitHub\\LogApp-Gen-2-2023-CDIS-UANL\\LogApp-Gen-2-2023-CDIS-UANL\\src\\app\\auth\\components\\register\\register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent{\r\n\r\n  formularioRegister: FormGroup = this.fb.group ({\r\n    usname: ['', [Validators.required, Validators.minLength(6)]],\r\n    id: ['', [Validators.required, Validators.minLength(8)]],\r\n    pass: ['', [Validators.required, Validators.minLength(7)]]\r\n  });\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private router: Router,\r\n    private authService : AuthService,\r\n    private toastr : ToastrService\r\n    ){}\r\n\r\n    register(){\r\n      const {usname, id, pass}= this.formularioRegister.value;\r\n      this.authService.register(usname,id,pass)\r\n      .subscribe(res =>{\r\n        if(res === true){\r\n          this.router.navigateByUrl('/dashboard')\r\n          this.toastr.success(id+ \" \" + usname + 'Registro correcto')\r\n        } else {\r\n          this.toastr.error(res,'Error',{\r\n            timeOut: 4000,\r\n            progressAnimation: 'increasing'\r\n          })\r\n        }\r\n      })\r\n\r\n    }\r\n}\r\n","<div id=\"bg\"></div>\r\n\r\n<form [formGroup]=\"formularioRegister\" (ngSubmit)=\"register()\">\r\n    <div class=\"form-field\">\r\n        <input placeholder=\"Username\" formControlName=\"usname\" required />\r\n    </div>\r\n    <div class=\"form-field\">\r\n        <input placeholder=\"id\" formControlName=\"id\" required />\r\n    </div>\r\n\r\n    <div class=\"form-field\">\r\n        <input type=\"password\" placeholder=\"Password\" formControlName=\"pass\"\r\n            required />\r\n    </div>\r\n\r\n    <div class=\"form-field\">\r\n        <button class=\"btn\" type=\"submit\" >Register</button>\r\n    </div>\r\n\r\n    <div class=\"form-field\">\r\n        <button class=\"btn-sec\" routerLink=\"/auth/register\">Log In</button>\r\n    </div>\r\n\r\n</form>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}